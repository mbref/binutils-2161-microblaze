From 14a2d472e795c2038ca26fcc107897a89f79d574 Mon Sep 17 00:00:00 2001
Message-Id: <14a2d472e795c2038ca26fcc107897a89f79d574.1241484031.git.john.williams@petalogix.com>
In-Reply-To: <4c1022f018b2f64f88e2cbd4788085f347490488.1241484030.git.john.williams@petalogix.com>
References: <4c1022f018b2f64f88e2cbd4788085f347490488.1241484030.git.john.williams@petalogix.com>
From: John Williams <john.williams@petalogix.com>
Date: Mon, 27 Apr 2009 16:05:23 +1000
Subject: [PATCH 22/40] microblaze:Create .got section if needed

---
 bfd/elf32-microblaze.c |   66 ++++++++++++++++++++++++++++++++++++++++-------
 1 files changed, 56 insertions(+), 10 deletions(-)

diff --git a/bfd/elf32-microblaze.c b/bfd/elf32-microblaze.c
index 4f2da31..70bf2ab 100644
--- a/bfd/elf32-microblaze.c
+++ b/bfd/elf32-microblaze.c
@@ -73,6 +73,8 @@ static bfd_boolean
 microblaze_elf_size_dynamic_sections PARAMS((bfd *, struct bfd_link_info *));
 static bfd_boolean 
 microblaze_elf_finish_dynamic_sections PARAMS((bfd *, struct bfd_link_info *));
+static bfd_boolean 
+create_got_section PARAMS((bfd *, struct bfd_link_info *));
 
 static int ro_small_data_pointer = 0;
 static int rw_small_data_pointer = 0;
@@ -1789,10 +1791,16 @@ microblaze_elf_check_relocs (bfd * abfd, struct bfd_link_info * info,
   struct elf_link_hash_entry ** sym_hashes_end;
   const Elf_Internal_Rela *     rel;
   const Elf_Internal_Rela *     rel_end;
+  asection *sgot;
  
   if (info->relocatable)
     return TRUE;
- 
+
+  if (elf_hash_table (info)->dynobj)
+    sgot = bfd_get_section_by_name (elf_hash_table (info)->dynobj, ".got");
+  else
+    sgot = NULL;
+
   symtab_hdr = & elf_tdata (abfd)->symtab_hdr;
   sym_hashes = elf_sym_hashes (abfd);
   sym_hashes_end = sym_hashes + symtab_hdr->sh_size / sizeof (Elf32_External_Sym);
@@ -1840,6 +1848,14 @@ microblaze_elf_check_relocs (bfd * abfd, struct bfd_link_info * info,
 
         /* This relocation requires .got entry */
         case R_MICROBLAZE_GOT_64:
+          if (sgot == NULL)
+            {
+              /* fprintf(stderr ,"check_relocs: creating .got section\n"); */
+              if (elf_hash_table (info)->dynobj == NULL)
+                elf_hash_table (info)->dynobj = abfd;
+              create_got_section(elf_hash_table (info)->dynobj, info);
+              sgot = bfd_get_section_by_name (elf_hash_table (info)->dynobj, ".got");
+            }
           if (h != NULL)
           {
             h->got.refcount += 1;
@@ -1878,7 +1894,27 @@ microblaze_elf_check_relocs (bfd * abfd, struct bfd_link_info * info,
 #define PLT_ENTRY_WORD_1  0xe9940000    /* "lwi r12,r20,0" - relocated to lwi r12,r20,func@GOT */
 #define PLT_ENTRY_WORD_2  0x98186000    /* "brad r12" */
 #define PLT_ENTRY_WORD_3  0x80000000    /* "nop" */
- 
+
+static bfd_boolean
+create_got_section(bfd *dynobj, struct bfd_link_info *info)
+{
+  asection *srelgot;
+
+  if (! _bfd_elf_create_got_section (dynobj, info))
+    return FALSE;
+  srelgot = bfd_make_section (dynobj, ".rela.got");
+  if (srelgot == NULL
+      || ! bfd_set_section_flags (dynobj, srelgot, SEC_ALLOC
+                                  | SEC_LOAD
+                                  | SEC_HAS_CONTENTS
+                                  | SEC_IN_MEMORY
+                                  | SEC_LINKER_CREATED
+                                  | SEC_READONLY)
+      || ! bfd_set_section_alignment (dynobj, srelgot, 2))
+    return FALSE;
+  return TRUE;
+}
+
 static bfd_boolean
 microblaze_elf_create_dynamic_sections (bfd *dynobj, struct bfd_link_info *info)
 {
@@ -1886,14 +1922,16 @@ microblaze_elf_create_dynamic_sections (bfd *dynobj, struct bfd_link_info *info)
 
   if (!_bfd_elf_create_dynamic_sections (dynobj, info))
     return FALSE;
-  s = bfd_make_section (dynobj, ".rela.got");
-  if (s == NULL
-      || ! bfd_set_section_flags (dynobj, s,
-                                  (SEC_ALLOC | SEC_LOAD | SEC_HAS_CONTENTS
-                                   | SEC_IN_MEMORY | SEC_LINKER_CREATED
-                                   | SEC_READONLY))
-      || ! bfd_set_section_alignment (dynobj, s, 2))
-    return FALSE;
+  if (!bfd_get_section_by_name(dynobj, ".rela.got")) {
+    s = bfd_make_section (dynobj, ".rela.got");
+    if (s == NULL
+        || ! bfd_set_section_flags (dynobj, s,
+                                    (SEC_ALLOC | SEC_LOAD | SEC_HAS_CONTENTS
+                                     | SEC_IN_MEMORY | SEC_LINKER_CREATED
+                                     | SEC_READONLY))
+        || ! bfd_set_section_alignment (dynobj, s, 2))
+      return FALSE;
+  }
                                                                         
   return TRUE;
 }
@@ -2058,12 +2096,20 @@ microblaze_elf_size_dynamic_sections (output_bfd, info)
       symtab_hdr = &elf_tdata (ibfd)->symtab_hdr;
       locsymcount = symtab_hdr->sh_info;
       end_local_got = local_got + locsymcount;
+      if (sgot == NULL)
+        {
+          /* fprintf(stderr, "creating .got section\n"); */
+          create_got_section(output_bfd, dynobj);
+          dynrel_arg.sgot = sgot = bfd_get_section_by_name (dynobj, ".got");
+          dynrel_arg.srelgot = bfd_get_section_by_name (dynobj, ".rela.got");
+        }
       for (; local_got < end_local_got; ++local_got)
         {
           if (*local_got > 0)
             {
               *local_got = sgot->size;
               sgot->size += 4;
+              dynrel_arg.srelgot->size += sizeof (Elf32_External_Rela);
             }
           else
             *local_got = (bfd_vma) -1;
-- 
1.5.3.8

