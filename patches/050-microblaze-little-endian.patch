diff -Naurp /tmp/binutils-2.16.1/bfd/config.bfd binutils-2.16.1/bfd/config.bfd
--- /tmp/binutils-2.16.1/bfd/config.bfd	2010-07-28 23:09:47.586589457 +0200
+++ binutils-2.16.1/bfd/config.bfd	2010-08-06 20:05:15.921405378 +0200
@@ -805,8 +805,14 @@ case "${targ}" in
     targ_selvecs="mcore_pe_big_vec mcore_pe_little_vec mcore_pei_big_vec mcore_pei_little_vec"
     ;;
 
+  microblazeel*-*)
+    targ_defvec=bfd_elf32_microblazeel_vec
+    targ_selvecs=bfd_elf32_microblaze_vec
+    ;;
+
   microblaze*-*)
     targ_defvec=bfd_elf32_microblaze_vec
+    targ_selvecs=bfd_elf32_microblazeel_vec
     ;;
 
   mips*-big-*)
diff -Naurp /tmp/binutils-2.16.1/bfd/configure binutils-2.16.1/bfd/configure
--- /tmp/binutils-2.16.1/bfd/configure	2010-07-28 23:09:47.586589457 +0200
+++ binutils-2.16.1/bfd/configure	2010-08-06 20:05:15.921405378 +0200
@@ -11581,6 +11581,7 @@ do
     bfd_elf32_m88k_vec)		tb="$tb elf32-m88k.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_big_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_little_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
+    bfd_elf32_microblazeel_vec)	tb="$tb elf32-microblaze.lo elf32.lo $elf" ;;
     bfd_elf32_microblaze_vec)	tb="$tb elf32-microblaze.lo elf32.lo $elf" ;;
     bfd_elf32_mn10200_vec)	tb="$tb elf-m10200.lo elf32.lo $elf" ;;
     bfd_elf32_mn10300_vec)	tb="$tb elf-m10300.lo elf32.lo $elf" ;;
diff -Naurp /tmp/binutils-2.16.1/bfd/configure.in binutils-2.16.1/bfd/configure.in
--- /tmp/binutils-2.16.1/bfd/configure.in	2010-07-28 23:09:47.586589457 +0200
+++ binutils-2.16.1/bfd/configure.in	2010-08-06 20:05:15.921405378 +0200
@@ -628,6 +628,7 @@ do
     bfd_elf32_m88k_vec)		tb="$tb elf32-m88k.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_big_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
     bfd_elf32_mcore_little_vec)	tb="$tb elf32-mcore.lo elf32.lo $elf" ;;
+    bfd_elf32_microblazeel_vec)	tb="$tb elf32-microblaze.lo elf32.lo $elf" ;;
     bfd_elf32_microblaze_vec)	tb="$tb elf32-microblaze.lo elf32.lo $elf" ;;
     bfd_elf32_mn10200_vec)	tb="$tb elf-m10200.lo elf32.lo $elf" ;;
     bfd_elf32_mn10300_vec)	tb="$tb elf-m10300.lo elf32.lo $elf" ;;
diff -Naurp /tmp/binutils-2.16.1/bfd/elf32-microblaze.c binutils-2.16.1/bfd/elf32-microblaze.c
--- /tmp/binutils-2.16.1/bfd/elf32-microblaze.c	2010-07-28 23:09:47.906574898 +0200
+++ binutils-2.16.1/bfd/elf32-microblaze.c	2010-08-08 23:33:21.987695326 +0200
@@ -667,6 +667,8 @@ microblaze_elf_relocate_section (bfd *ou
    Elf_Internal_Shdr *symtab_hdr = &elf_tdata (input_bfd)->symtab_hdr;
    struct elf_link_hash_entry **sym_hashes = elf_sym_hashes (input_bfd);
    Elf_Internal_Rela *rel, *relend;
+   int endian = !bfd_little_endian (output_bfd) * 2;
+
    /* Assume success.  */
    bfd_boolean ret = TRUE;
    asection *sreloc;
@@ -892,8 +894,8 @@ microblaze_elf_relocate_section (bfd *ou
                            + input_section->output_offset
                            + offset + INST_WORD_SIZE);
             relocation += addend;
-            bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + 2);
-            bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+            bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + endian);
+            bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + endian + INST_WORD_SIZE);
             break;
 
          case (int) R_MICROBLAZE_PLT_64:
@@ -908,8 +910,8 @@ microblaze_elf_relocate_section (bfd *ou
                immediate = relocation - (input_section->output_section->vma
                            + input_section->output_offset
                            + offset + INST_WORD_SIZE);
-               bfd_put_16 (input_bfd, (immediate >> 16) & 0xffff, contents + offset + 2);
-               bfd_put_16 (input_bfd, immediate & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+               bfd_put_16 (input_bfd, (immediate >> 16) & 0xffff, contents + offset + endian);
+               bfd_put_16 (input_bfd, immediate & 0xffff, contents + offset + endian + INST_WORD_SIZE);
            }
            else
            {
@@ -917,8 +919,8 @@ microblaze_elf_relocate_section (bfd *ou
                               + input_section->output_offset
                               + offset + INST_WORD_SIZE);
                immediate = relocation;
-               bfd_put_16 (input_bfd, (immediate >> 16) & 0xffff, contents + offset + 2);
-               bfd_put_16 (input_bfd, immediate & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+               bfd_put_16 (input_bfd, (immediate >> 16) & 0xffff, contents + offset + endian);
+               bfd_put_16 (input_bfd, immediate & 0xffff, contents + offset + endian + INST_WORD_SIZE);
            }
            break;
         }
@@ -977,8 +979,8 @@ microblaze_elf_relocate_section (bfd *ou
               } else
                  abort(); /* ??? */
           }
-          bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + 2);
-          bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+          bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + endian);
+          bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + endian + INST_WORD_SIZE);
           break;
         }
 	 
@@ -993,8 +995,8 @@ microblaze_elf_relocate_section (bfd *ou
           immediate = relocation;
           lo = immediate & 0x0000ffff;
           high = (immediate >> 16) & 0x0000ffff;
-          bfd_put_16 ( input_bfd, high, contents + offset + 2);
-          bfd_put_16 ( input_bfd, lo, contents + offset + INST_WORD_SIZE + 2);
+          bfd_put_16 ( input_bfd, high, contents + offset + endian);
+          bfd_put_16 ( input_bfd, lo, contents + offset + INST_WORD_SIZE + endian);
           break;
         }
 	 
@@ -1025,8 +1027,8 @@ microblaze_elf_relocate_section (bfd *ou
                 relocation -= (input_section->output_section->vma
                                + input_section->output_offset
                                + offset + INST_WORD_SIZE);
-                bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + 2);
-                bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+                bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + endian);
+                bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + endian + INST_WORD_SIZE);
             }
 	    break;
 	  }
@@ -1114,8 +1116,8 @@ microblaze_elf_relocate_section (bfd *ou
                 relocation -= (input_section->output_section->vma
                                + input_section->output_offset
                                + offset + INST_WORD_SIZE);
-                bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + 2);
-                bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + 2 + INST_WORD_SIZE);
+                bfd_put_16 (input_bfd, (relocation >> 16) & 0xffff, contents + offset + endian);
+                bfd_put_16 (input_bfd, relocation & 0xffff, contents + offset + endian + INST_WORD_SIZE);
             }
 	    break;
           }
@@ -1193,7 +1195,20 @@ microblaze_elf_relocate_section (bfd *ou
 
    return ret;
 }
-
+
+/* Merge backend specific data from an object file to the output
+   object file when linking.  
+
+   Note: We only use this hook to catch endian mismatches */
+static bfd_boolean
+microblaze_elf_merge_private_bfd_data (bfd * ibfd, bfd * obfd)
+{
+  /* Check if we have the same endianess.  */
+  if (! _bfd_generic_verify_endian_match (ibfd, obfd))
+    return FALSE;
+
+  return TRUE;
+}
 
 /* Set the values of the small data pointers */
 static void
@@ -1241,6 +1256,7 @@ microblaze_elf_relax_section (bfd *abfd,
    Elf_Internal_Sym *isymbuf, *isymend;
    Elf_Internal_Sym *isym;
    int symcount;
+   int endian = !bfd_little_endian (abfd) * 2;
 
    /* We only do this once per section.  We may be able to delete some code 
       by running multiple passes, but it is not worth it */
@@ -1252,6 +1268,11 @@ microblaze_elf_relax_section (bfd *abfd,
        || (sec->reloc_count == 0))
       return TRUE;
 
+#if 0
+   if (bfd_little_endian (abfd))
+      return TRUE;
+#endif
+
    BFD_ASSERT((sec->size > 0) || (sec->rawsize > 0));
 
    /* If this is the first time we have been called for this section,
@@ -1455,7 +1476,7 @@ microblaze_elf_relax_section (bfd *abfd,
 	       if (i != 0) {
 		 irel->r_addend -= i * INST_WORD_SIZE;
 		 /* Should use HOWTO. */
-		 bfd_put_16 (abfd, irel->r_addend, contents + irel->r_offset + 2);
+		 bfd_put_16 (abfd, irel->r_addend, contents + irel->r_offset + endian);
 	       }
 	     }
 	     break;
@@ -1625,7 +1646,7 @@ microblaze_elf_relax_section (bfd *abfd,
 			  }
 		      }
 		    
-		    immediate = (unsigned short) bfd_get_16 (abfd, ocontents + irelscan->r_offset + 2);
+		    immediate = (unsigned short) bfd_get_16 (abfd, ocontents + irelscan->r_offset + endian);
 		    target_address = immediate;
 		    for (i = 0; i < delete_count; i++) {
 		      if (deleted_addresses[i] >= target_address)
@@ -1640,7 +1661,7 @@ microblaze_elf_relax_section (bfd *abfd,
 	   (int) immediate, 
 	   (int) irelscan->r_offset,
 	   (int) irelscan->r_addend);
-		      bfd_put_16 (abfd, immediate, ocontents + irelscan->r_offset + 2);
+		      bfd_put_16 (abfd, immediate, ocontents + irelscan->r_offset + endian);
 		    }
 		  }
 	      }
@@ -1675,8 +1696,8 @@ microblaze_elf_relax_section (bfd *abfd,
                         elf_section_data (o)->this_hdr.contents = ocontents;
                      }
                   }
-		  immediate = (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + 2) << 16) & 0xffff0000;
-		  immediate += (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + INST_WORD_SIZE + 2)) & 0x0000ffff;
+		  immediate = (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + endian) << 16) & 0xffff0000;
+		  immediate += (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + INST_WORD_SIZE + endian)) & 0x0000ffff;
 
                   for (i = 0; i < delete_count; i++) {
                      if (deleted_addresses[i] >= irelscan->r_addend)
@@ -1723,21 +1744,21 @@ microblaze_elf_relax_section (bfd *abfd,
 			  }
 		      }
 		    
-		    immediate = (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + 2) << 16) & 0xffff0000;
-		    immediate += (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + INST_WORD_SIZE + 2)) & 0x0000ffff;
+		    immediate = (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + endian) << 16) & 0xffff0000;
+		    immediate += (unsigned short) (bfd_get_16 (abfd, ocontents + irelscan->r_offset + INST_WORD_SIZE + endian)) & 0x0000ffff;
 		    target_address = immediate;
 		    for (i = 0; i < delete_count; i++) {
 		      if (deleted_addresses[i] >= target_address)
                         break;
 		    }
 		    if (i > 0) {
-		      BFD_ASSERT (immediate == irelscan->r_addend);
+		    //  BFD_ASSERT (immediate == irelscan->r_addend);
 		      immediate -= i * INST_WORD_SIZE;
 		      irelscan->r_addend -= i * INST_WORD_SIZE;
        if (dbg) printf("MICROBLAZE_64_PCREL: filename = %s, section = %s, immediate = 0x%8.8x, r_addend = 0x%8.8x\n",
 	   abfd->filename, sec->name, (int) immediate, (int) irelscan->r_addend);
-		      bfd_put_16 (abfd, ((immediate >> 16) & 0x0000ffff), ocontents + irelscan->r_offset + 2);
-		      bfd_put_16 (abfd, (immediate & 0x0000ffff), ocontents + irelscan->r_offset + INST_WORD_SIZE + 2);
+		      bfd_put_16 (abfd, ((immediate >> 16) & 0x0000ffff), ocontents + irelscan->r_offset + endian);
+		      bfd_put_16 (abfd, (immediate & 0x0000ffff), ocontents + irelscan->r_offset + INST_WORD_SIZE + endian);
 		    }
 		    
 		  }
@@ -3203,6 +3224,9 @@ microblaze_elf_add_symbol_hook (bfd *abf
 }
 
 
+#define TARGET_LITTLE_SYM	bfd_elf32_microblazeel_vec
+#define TARGET_LITTLE_NAME	"elf32-microblazeel"
+
 #define TARGET_BIG_SYM          bfd_elf32_microblaze_vec
 #define TARGET_BIG_NAME		"elf32-microblaze"
 
@@ -3216,6 +3240,7 @@ microblaze_elf_add_symbol_hook (bfd *abf
 #define bfd_elf32_bfd_is_local_label_name       microblaze_elf_is_local_label_name
 #define elf_backend_relocate_section		microblaze_elf_relocate_section
 #define bfd_elf32_bfd_relax_section             microblaze_elf_relax_section
+#define bfd_elf32_bfd_merge_private_bfd_data    microblaze_elf_merge_private_bfd_data
 
 /*#define bfd_elf32_bfd_set_private_flags		microblaze_elf_set_private_flags*/
 
diff -Naurp /tmp/binutils-2.16.1/bfd/targets.c binutils-2.16.1/bfd/targets.c
--- /tmp/binutils-2.16.1/bfd/targets.c	2010-07-28 23:09:47.586589457 +0200
+++ binutils-2.16.1/bfd/targets.c	2010-08-06 20:05:15.921405378 +0200
@@ -585,6 +585,7 @@ extern const bfd_target bfd_elf32_m68k_v
 extern const bfd_target bfd_elf32_m88k_vec;
 extern const bfd_target bfd_elf32_mcore_big_vec;
 extern const bfd_target bfd_elf32_mcore_little_vec;
+extern const bfd_target bfd_elf32_microblazeel_vec;
 extern const bfd_target bfd_elf32_microblaze_vec;
 extern const bfd_target bfd_elf32_mn10200_vec;
 extern const bfd_target bfd_elf32_mn10300_vec;
diff -Naurp /tmp/binutils-2.16.1/config.sub binutils-2.16.1/config.sub
--- /tmp/binutils-2.16.1/config.sub	2010-07-28 23:09:47.586589457 +0200
+++ binutils-2.16.1/config.sub	2010-08-06 20:05:15.921405378 +0200
@@ -145,7 +145,7 @@ case $os in
 	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
 	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
 	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
-	-apple | -axis | -knuth | -cray | -microblaze)
+	-apple | -axis | -knuth | -cray | -microblaze*)
 		os=
 		basic_machine=$1
 		;;
@@ -310,7 +310,8 @@ case $basic_machine in
 	| ip2k-* | iq2000-* \
 	| m32r-* | m32rle-* \
 	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
-	| m88110-* | m88k-* | maxq-* | mcore-* | microblaze-* \
+	| m88110-* | m88k-* | maxq-* | mcore-* \
+	| microblaze-* | microblazeeb-* | microblazeel-* \
 	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
 	| mips16-* \
 	| mips64-* | mips64el-* \
diff -Naurp /tmp/binutils-2.16.1/gas/config/tc-microblaze.c binutils-2.16.1/gas/config/tc-microblaze.c
--- /tmp/binutils-2.16.1/gas/config/tc-microblaze.c	2010-07-28 23:09:47.926573673 +0200
+++ binutils-2.16.1/gas/config/tc-microblaze.c	2010-08-06 23:58:22.143094294 +0200
@@ -52,6 +52,9 @@
 #define streq(a,b) (strcmp (a, b) == 0)
 #endif
 
+#define OPTION_EB (OPTION_MD_BASE + 0)
+#define OPTION_EL (OPTION_MD_BASE + 1)
+
 static char * parse_reg    PARAMS ((char *, unsigned *));
 static char * parse_exp    PARAMS ((char *, expressionS *));
 static char * parse_imm   PARAMS ((char *, expressionS *, int, int));
@@ -1548,15 +1551,15 @@ md_assemble (char * str)
       output = frag_more (isize);
       break;
       
-   case INST_TYPE_RD_R1_SPECIAL:
+   case INST_TYPE_R1_R2_SPECIAL:
       if (strcmp(op_end, ""))
-         op_end = parse_reg(op_end + 1, &reg1);  /* get rd */
+         op_end = parse_reg(op_end + 1, &reg1);  /* get r1 */
       else {
          as_fatal(_("Error in statement syntax"));
          reg1 = 0;
       }
       if (strcmp(op_end, ""))
-         op_end = parse_reg(op_end + 1, &reg2);  /* get r1 */
+         op_end = parse_reg(op_end + 1, &reg2);  /* get r2 */
       else {
          as_fatal(_("Error in statement syntax"));
          reg2 =0;
@@ -1570,7 +1573,6 @@ md_assemble (char * str)
       
       
       /* insn wic ra, rb => wic ra, ra, rb */
-      inst |= (reg1 << RD_LOW) & RD_MASK;
       inst |= (reg1 << RA_LOW) & RA_MASK;
       inst |= (reg2 << RB_LOW) & RB_MASK;
       
@@ -1922,6 +1924,12 @@ CONST char * md_shortopts = "";
 
 struct option md_longopts[] =
 {
+#ifdef OPTION_EB
+  {"EB", no_argument, NULL, OPTION_EB},
+#endif
+#ifdef OPTION_EL
+  {"EL", no_argument, NULL, OPTION_EL},
+#endif
    { NULL,          no_argument, NULL, 0}
 };
 
@@ -2430,32 +2438,10 @@ md_estimate_size_before_relax (register 
 void
 md_number_to_chars (char * ptr, valueT use, int nbytes)
 {
-   if (! target_big_endian)
-      switch (nbytes)
-      {
-      case 8: ptr[7] = (use >> 56) & 0xff;
-              ptr[6] = (use >> 48) & 0xff;
-              ptr[5] = (use >> 40) & 0xff;
-              ptr[4] = (use >> 32) & 0xff; /* fall through */
-      case 4: ptr[3] = (use >> 24) & 0xff; /* fall through */
-      case 3: ptr[2] = (use >> 16) & 0xff; /* fall through */
-      case 2: ptr[1] = (use >>  8) & 0xff; /* fall through */
-      case 1: ptr[0] = (use >>  0) & 0xff;    break;
-      default: abort ();
-      }
-   else
-      switch (nbytes)
-      {
-      case 8: *ptr++ = (use >> 56) & 0xff; 
-              *ptr++ = (use >> 48) & 0xff;
-              *ptr++ = (use >> 40) & 0xff;
-              *ptr++ = (use >> 32) & 0xff; /* fall through */              
-      case 4: *ptr++ = (use >> 24) & 0xff; /* fall through */
-      case 3: *ptr++ = (use >> 16) & 0xff; /* fall through */
-      case 2: *ptr++ = (use >>  8) & 0xff; /* fall through */
-      case 1: *ptr++ = (use >>  0) & 0xff;    break;
-      default: abort ();
-      }
+  if (target_big_endian)
+    number_to_chars_bigendian (ptr, use, nbytes);
+  else
+    number_to_chars_littleendian (ptr, use, nbytes);
 }
 
 /* Round up a section size to the appropriate boundary.  */
@@ -2576,6 +2562,17 @@ int
 md_parse_option (int c, char * arg ATTRIBUTE_UNUSED)
 {
    switch (c) {
+#ifdef OPTION_EB
+    case OPTION_EB:
+      target_big_endian = 1;
+      break;
+#endif
+
+#ifdef OPTION_EL
+    case OPTION_EL:
+      target_big_endian = 0;
+      break;
+#endif
    default:
       return 0;
    }
diff -Naurp /tmp/binutils-2.16.1/gas/config/tc-microblaze.h binutils-2.16.1/gas/config/tc-microblaze.h
--- /tmp/binutils-2.16.1/gas/config/tc-microblaze.h	2010-07-28 23:09:47.866576288 +0200
+++ binutils-2.16.1/gas/config/tc-microblaze.h	2010-08-06 20:05:15.921405378 +0200
@@ -46,8 +46,10 @@
 
 
 #define TARGET_ARCH	bfd_arch_microblaze
+#ifndef TARGET_BYTES_BIG_ENDIAN
 /* Used to initialise target_big_endian.  */
 #define TARGET_BYTES_BIG_ENDIAN 1
+#endif
 
 #define IGNORE_NONSTANDARD_ESCAPES
 
@@ -99,7 +101,7 @@ extern const struct relax_type md_relax_
 
 #ifdef OBJ_ELF
 
-#define TARGET_FORMAT (target_big_endian ? "elf32-microblaze" : "elf32-microblaze-little")
+#define TARGET_FORMAT (target_big_endian ? "elf32-microblaze" : "elf32-microblazeel")
 
 #define ELF_TC_SPECIAL_SECTIONS \
   { ".sdata",		SHT_PROGBITS,	SHF_ALLOC + SHF_WRITE }, \
diff -Naurp /tmp/binutils-2.16.1/gas/configure.tgt binutils-2.16.1/gas/configure.tgt
--- /tmp/binutils-2.16.1/gas/configure.tgt	2010-07-28 23:09:47.596588372 +0200
+++ binutils-2.16.1/gas/configure.tgt	2010-08-06 20:05:15.921405378 +0200
@@ -51,7 +51,9 @@ case ${cpu} in
   m5200)		cpu_type=m68k ;;
   m8*)			cpu_type=m88k ;;
   maxq)			cpu_type=maxq ;;
-  microblaze*)		cpu_type=microblaze ;;
+  microblazeel*)	cpu_type=microblaze endian=little;;
+  microblazeeb*)	cpu_type=microblaze endian=big;;
+  microblaze*)		cpu_type=microblaze endian=big;;
   mips*el)		cpu_type=mips endian=little ;;
   mips*)		cpu_type=mips endian=big ;;
   or32*)		cpu_type=or32 endian=big ;;
diff -Naurp /tmp/binutils-2.16.1/ld/Makefile.am binutils-2.16.1/ld/Makefile.am
--- /tmp/binutils-2.16.1/ld/Makefile.am	2010-07-28 23:09:47.866576288 +0200
+++ binutils-2.16.1/ld/Makefile.am	2010-08-06 20:05:15.921405378 +0200
@@ -175,6 +175,7 @@ ALL_EMULATIONS = \
 	eelf32lppcsim.o \
 	eelf32mcore.o \
 	eelf32mb_linux.o \
+	eelf32microblazeel.o \
 	eelf32microblaze.o \
 	eelf32mipswindiss.o \
 	eelf32openrisc.o \
@@ -641,9 +642,17 @@ eelf32frv.c: $(srcdir)/emulparams/elf32f
 eelf32mcore.c: $(srcdir)/emulparams/elf32mcore.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32mcore "$(tdir_mcore)"
+eelf32mbel_linux.c: $(srcdir)/emulparams/elf32mbel_linux.sh \
+  $(srcdir)/emulparams/elf32mb_linux.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32mbel_linux "$(tdir_microblazeel)"
 eelf32mb_linux.c: $(srcdir)/emulparams/elf32mb_linux.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32mb_linux "$(tdir_microblaze)"
+eelf32microblazeel.c: $(srcdir)/emulparams/elf32microblazeel.sh \
+  $(srcdir)/emulparams/elf32microblaze.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmicroblaze.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32microblazeel "$(tdir_microblazeel)"
 eelf32microblaze.c: $(srcdir)/emulparams/elf32microblaze.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmicroblaze.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32microblaze "$(tdir_microblaze)"
diff -Naurp /tmp/binutils-2.16.1/ld/Makefile.in binutils-2.16.1/ld/Makefile.in
--- /tmp/binutils-2.16.1/ld/Makefile.in	2010-07-28 23:09:47.906574898 +0200
+++ binutils-2.16.1/ld/Makefile.in	2010-08-06 20:05:15.921405378 +0200
@@ -301,6 +301,7 @@ ALL_EMULATIONS = \
 	eelf32mcore.o \
 	eelf32mb_linux.o \
 	eelf32mb_uclinux.o \
+	eelf32microblazeel.o \
 	eelf32microblaze.o \
 	eelf32mipswindiss.o \
 	eelf32openrisc.o \
@@ -1379,12 +1380,17 @@ eelf32frv.c: $(srcdir)/emulparams/elf32f
 eelf32mcore.c: $(srcdir)/emulparams/elf32mcore.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32mcore "$(tdir_mcore)"
+eelf32mbel_linux.c: $(srcdir)/emulparams/elf32mbel_linux.sh \
+  $(srcdir)/emulparams/elf32mb_linux.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32mbel_linux "$(tdir_microblazeel)"
 eelf32mb_linux.c: $(srcdir)/emulparams/elf32mb_linux.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32mb_linux "$(tdir_microblaze)"
-eelf32mb_uclinux.c: $(srcdir)/emulparams/elf32mb_uclinux.sh \
-  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elf.sc ${GEN_DEPENDS}
-	${GENSCRIPTS} elf32mb_uclinux "$(tdir_microblaze)"
+eelf32microblazeel.c: $(srcdir)/emulparams/elf32microblazeel.sh \
+  $(srcdir)/emulparams/elf32microblaze.sh \
+  $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmicroblaze.sc ${GEN_DEPENDS}
+	${GENSCRIPTS} elf32microblazeel "$(tdir_microblazeel)"
 eelf32microblaze.c: $(srcdir)/emulparams/elf32microblaze.sh \
   $(srcdir)/emultempl/elf32.em $(srcdir)/scripttempl/elfmicroblaze.sc ${GEN_DEPENDS}
 	${GENSCRIPTS} elf32microblaze "$(tdir_microblaze)"
diff -Naurp /tmp/binutils-2.16.1/ld/configure.tgt binutils-2.16.1/ld/configure.tgt
--- /tmp/binutils-2.16.1/ld/configure.tgt	2010-07-28 23:09:47.866576288 +0200
+++ binutils-2.16.1/ld/configure.tgt	2010-08-06 20:05:15.931405068 +0200
@@ -403,9 +403,22 @@ vax-*-netbsdaout* | vax-*-netbsd*)
 			targ_emul=vaxnbsd
 			targ_extra_emuls=elf32vax ;;
 vax-*-linux-gnu*)	targ_emul=elf32vax ;;
+microblazeel*-linux*)
+			targ_emul=elf32mbel_linux
+			targ_extra_emuls="elf32microblaze elf32mb_linux"
+			;;
 microblaze*-linux*)
-			targ_emul="elf32mb_linux" ;;
-microblaze*)		targ_emul=elf32microblaze ;;
+			targ_emul=elf32mb_linux
+			targ_extra_emuls="elf32microblazeel elf32mbel_linux"
+			;;
+microblazeel*)
+			targ_emul=elf32microblazeel
+			targ_extra_emuls="elf32microblaze"
+			;;
+microblaze*)
+			targ_emul=elf32microblaze
+			targ_extra_emuls="elf32microblazeel"
+			;;
 mips*-*-pe)		targ_emul=mipspe ;
 			targ_extra_ofiles="deffilep.o pe-dll.o" ;;
 mips*-dec-ultrix*)	targ_emul=mipslit ;;
diff -Naurp /tmp/binutils-2.16.1/ld/emulparams/elf32mb_linux.sh binutils-2.16.1/ld/emulparams/elf32mb_linux.sh
--- /tmp/binutils-2.16.1/ld/emulparams/elf32mb_linux.sh	2010-07-28 23:09:47.866576288 +0200
+++ binutils-2.16.1/ld/emulparams/elf32mb_linux.sh	2010-08-06 20:05:15.931405068 +0200
@@ -1,5 +1,7 @@
 SCRIPT_NAME=elf
 OUTPUT_FORMAT="elf32-microblaze"
+BIG_OUTPUT_FORMAT="elf32-microblaze"
+LITTLE_OUTPUT_FORMAT="elf32-microblazeel"
 TEXT_START_ADDR=0x10000000
 NONPAGED_TEXT_START_ADDR=0x28
 ALIGNMENT=4
diff -Naurp /tmp/binutils-2.16.1/ld/emulparams/elf32mbel_linux.sh binutils-2.16.1/ld/emulparams/elf32mbel_linux.sh
--- /tmp/binutils-2.16.1/ld/emulparams/elf32mbel_linux.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.16.1/ld/emulparams/elf32mbel_linux.sh	2010-08-06 20:05:15.931405068 +0200
@@ -0,0 +1,19 @@
+SCRIPT_NAME=elf
+OUTPUT_FORMAT="elf32-microblazeel"
+BIG_OUTPUT_FORMAT="elf32-microblaze"
+LITTLE_OUTPUT_FORMAT="elf32-microblazeel"
+TEXT_START_ADDR=0x10000000
+NONPAGED_TEXT_START_ADDR=0x28
+ALIGNMENT=4
+MAXPAGESIZE=0x1000
+COMMONPAGESIZE=0x1000
+ARCH=microblaze
+
+NOP=0x80000000
+
+TEMPLATE_NAME=elf32
+GENERATE_SHLIB_SCRIPT=yes
+GENERATE_PIE_SCRIPT=yes
+NO_SMALL_DATA=yes
+SEPARATE_GOTPLT=12
+      
diff -Naurp /tmp/binutils-2.16.1/ld/emulparams/elf32microblaze.sh binutils-2.16.1/ld/emulparams/elf32microblaze.sh
--- /tmp/binutils-2.16.1/ld/emulparams/elf32microblaze.sh	2010-07-28 23:09:47.606587838 +0200
+++ binutils-2.16.1/ld/emulparams/elf32microblaze.sh	2010-08-06 20:05:15.931405068 +0200
@@ -1,5 +1,7 @@
 SCRIPT_NAME=elfmicroblaze
 OUTPUT_FORMAT="elf32-microblaze"
+BIG_OUTPUT_FORMAT="elf32-microblaze"
+LITTLE_OUTPUT_FORMAT="elf32-microblazeel"
 #TEXT_START_ADDR=0
 NONPAGED_TEXT_START_ADDR=0x28
 ALIGNMENT=4
diff -Naurp /tmp/binutils-2.16.1/ld/emulparams/elf32microblazeel.sh binutils-2.16.1/ld/emulparams/elf32microblazeel.sh
--- /tmp/binutils-2.16.1/ld/emulparams/elf32microblazeel.sh	1970-01-01 01:00:00.000000000 +0100
+++ binutils-2.16.1/ld/emulparams/elf32microblazeel.sh	2010-08-06 20:05:15.931405068 +0200
@@ -0,0 +1,25 @@
+SCRIPT_NAME=elfmicroblaze
+OUTPUT_FORMAT="elf32-microblazeel"
+BIG_OUTPUT_FORMAT="elf32-microblaze"
+LITTLE_OUTPUT_FORMAT="elf32-microblazeel"
+#TEXT_START_ADDR=0
+NONPAGED_TEXT_START_ADDR=0x28
+ALIGNMENT=4
+MAXPAGESIZE=4
+ARCH=microblaze
+EMBEDDED=yes
+
+NOP=0x80000000
+
+# Hmmm, there's got to be a better way.  This sets the stack to the
+# top of the simulator memory (2^19 bytes).
+#PAGE_SIZE=0x1000
+#DATA_ADDR=0x10000
+#OTHER_RELOCATING_SECTIONS='.stack 0x7000 : { _stack = .; *(.stack) }'
+#$@{RELOCATING+ PROVIDE (__stack = 0x7000);@}
+#OTHER_RELOCATING_SECTIONS='PROVIDE (_stack = _end + 0x1000);'
+
+TEMPLATE_NAME=elf32
+#GENERATE_SHLIB_SCRIPT=yes
+
+    
diff -Naurp /tmp/binutils-2.16.1/opcodes/microblaze-dis.c binutils-2.16.1/opcodes/microblaze-dis.c
--- /tmp/binutils-2.16.1/opcodes/microblaze-dis.c	2010-07-28 23:09:47.656585623 +0200
+++ binutils-2.16.1/opcodes/microblaze-dis.c	2010-08-06 20:41:12.114541292 +0200
@@ -55,7 +55,6 @@ static char * get_field_imm (long instr)
 static char * get_field_imm5 (long instr);
 static char * get_field_rfsl (long instr);
 static char * get_field_imm15 (long instr);
-static char * get_field_unsigned_imm (long instr);
 char * get_field_special (long instr, struct op_code_struct * op);
 unsigned long read_insn_microblaze (bfd_vma memaddr, 
 		      struct disassemble_info *info,
@@ -120,14 +119,6 @@ get_field_imm15 (long instr)
   return(strdup(tmpstr));
 }
 
-static char *
-get_field_unsigned_imm (long instr)
-{
-  char tmpstr[25];
-  sprintf(tmpstr, "%d", (int)((instr & IMM_MASK) >> IMM_LOW));
-  return(strdup(tmpstr));
-}
-
 /*
   char *
   get_field_special (instr) 
@@ -397,8 +388,8 @@ print_insn_microblaze (bfd_vma memaddr, 
   case INST_TYPE_R1:
      fprintf(stream, "\t%s", get_field_r1(inst));
      break;
-  case INST_TYPE_RD_R1_SPECIAL:
-     fprintf(stream, "\t%s, %s", get_field_rd(inst), get_field_r2(inst));
+  case INST_TYPE_R1_R2_SPECIAL:
+     fprintf(stream, "\t%s, %s", get_field_r1(inst), get_field_r2(inst));
      break;
   case INST_TYPE_RD_IMM15:
      fprintf(stream, "\t%s, %s", get_field_rd(inst), get_field_imm15(inst));
diff -Naurp /tmp/binutils-2.16.1/opcodes/microblaze-opc.h binutils-2.16.1/opcodes/microblaze-opc.h
--- /tmp/binutils-2.16.1/opcodes/microblaze-opc.h	2010-07-28 23:09:47.916574118 +0200
+++ binutils-2.16.1/opcodes/microblaze-opc.h	2010-08-06 20:41:12.134540408 +0200
@@ -58,7 +58,7 @@ Foundation, Inc., 59 Temple Place - Suit
 #define INST_TYPE_R1_RFSL    15
 
   // new insn type for insn cache
-#define INST_TYPE_RD_R1_SPECIAL 16
+#define INST_TYPE_R1_R2_SPECIAL 16
 
 // new insn type for msrclr, msrset insns.
 #define INST_TYPE_RD_IMM15    17
@@ -103,7 +103,7 @@ Foundation, Inc., 59 Temple Place - Suit
 #define DELAY_SLOT 1
 #define NO_DELAY_SLOT 0
 
-#define MAX_OPCODES 280
+#define MAX_OPCODES 284
 
 struct op_code_struct {
   char *name;
@@ -171,10 +171,10 @@ struct op_code_struct {
   {"srl",   INST_TYPE_RD_R1, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000041, OPCODE_MASK_H34, srl, logical_inst },
   {"sext8", INST_TYPE_RD_R1, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000060, OPCODE_MASK_H34, sext8, logical_inst },
   {"sext16",INST_TYPE_RD_R1, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000061, OPCODE_MASK_H34, sext16, logical_inst },
-  {"wic",   INST_TYPE_RD_R1_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000068, OPCODE_MASK_H34B, wic, special_inst },
-  {"wdc",   INST_TYPE_RD_R1_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000064, OPCODE_MASK_H34B, wdc, special_inst },
-  {"wdc.clear", INST_TYPE_RD_R1_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000066, OPCODE_MASK_H34B, wdcclear, special_inst },
-  {"wdc.flush", INST_TYPE_RD_R1_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000074, OPCODE_MASK_H34B, wdcflush, special_inst },
+  {"wic",   INST_TYPE_R1_R2_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000068, OPCODE_MASK_H34B, wic, special_inst },
+  {"wdc",   INST_TYPE_R1_R2_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000064, OPCODE_MASK_H34B, wdc, special_inst },
+  {"wdc.clear", INST_TYPE_R1_R2_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000066, OPCODE_MASK_H34B, wdcclear, special_inst },    
+  {"wdc.flush", INST_TYPE_R1_R2_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x90000074, OPCODE_MASK_H34B, wdcflush, special_inst },
   {"mts",   INST_TYPE_SPECIAL_R1, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_MTS, 0x9400C000, OPCODE_MASK_H13S, mts, special_inst },
   {"mfs",   INST_TYPE_RD_SPECIAL, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_MFS, 0x94008000, OPCODE_MASK_H23S, mfs, special_inst },
   {"br",    INST_TYPE_R2, INST_PC_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0x98000000, OPCODE_MASK_H124, br, branch_inst },
@@ -225,12 +225,18 @@ struct op_code_struct {
   {"bgei",  INST_TYPE_R1_IMM, INST_PC_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xBCA00000, OPCODE_MASK_H1, bgei, branch_inst },
   {"bgeid", INST_TYPE_R1_IMM, INST_PC_OFFSET, DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xBEA00000, OPCODE_MASK_H1, bgeid, branch_inst },
   {"lbu",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC0000000, OPCODE_MASK_H4, lbu, memory_load_inst },
+  {"lbur",  INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC0000200, OPCODE_MASK_H4, lbur, memory_load_inst }, 
   {"lhu",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC4000000, OPCODE_MASK_H4, lhu, memory_load_inst },
+  {"lhur",  INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC4000200, OPCODE_MASK_H4, lhur, memory_load_inst }, 
   {"lw",    INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC8000000, OPCODE_MASK_H4, lw, memory_load_inst },
+  {"lwr",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC8000200, OPCODE_MASK_H4, lwr, memory_load_inst },  
   {"lwx",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xC8000400, OPCODE_MASK_H4, lwx, memory_load_inst },
   {"sb",    INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD0000000, OPCODE_MASK_H4, sb, memory_store_inst },
+  {"sbr",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD0000200, OPCODE_MASK_H4, sbr, memory_store_inst }, 
   {"sh",    INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD4000000, OPCODE_MASK_H4, sh, memory_store_inst },
+  {"shr",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD4000200, OPCODE_MASK_H4, shr, memory_store_inst }, 
   {"sw",    INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD8000000, OPCODE_MASK_H4, sw, memory_store_inst },
+  {"swr",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD8000200, OPCODE_MASK_H4, swr, memory_store_inst }, 
   {"swx",   INST_TYPE_RD_R1_R2, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xD8000400, OPCODE_MASK_H4, swx, memory_store_inst },
   {"lbui",  INST_TYPE_RD_R1_IMM, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xE0000000, OPCODE_MASK_H, lbui, memory_load_inst },
   {"lhui",  INST_TYPE_RD_R1_IMM, INST_NO_OFFSET, NO_DELAY_SLOT, IMMVAL_MASK_NON_SPECIAL, 0xE4000000, OPCODE_MASK_H, lhui, memory_load_inst },
diff -Naurp /tmp/binutils-2.16.1/opcodes/microblaze-opcm.h binutils-2.16.1/opcodes/microblaze-opcm.h
--- /tmp/binutils-2.16.1/opcodes/microblaze-opcm.h	2010-07-28 23:09:47.916574118 +0200
+++ binutils-2.16.1/opcodes/microblaze-opcm.h	2010-08-06 20:41:12.134540408 +0200
@@ -30,7 +30,7 @@ enum microblaze_instr {
    bltd, ble, bled, bgt, bgtd, bge, bged, ori, andi, xori, andni,
    imm, rtsd, rtid, rtbd, rted, bri, brid, brlid, brai, braid, bralid,
    brki, beqi, beqid, bnei, bneid, blti, bltid, blei, bleid, bgti,
-   bgtid, bgei, bgeid, lbu, lhu, lw, lwx, sb, sh, sw, swx, lbui, lhui, lwi,
+   bgtid, bgei, bgeid, lbu, lbur, lhu, lhur, lw, lwr, lwx, sb, sbr, sh, shr, sw, swr, swx, lbui, lhui, lwi,
    sbi, shi, swi, msrset, msrclr, tuqula, fadd, frsub, fmul, fdiv, 
    fcmp_lt, fcmp_eq, fcmp_le, fcmp_gt, fcmp_ne, fcmp_ge, fcmp_un, flt, fint, fsqrt, 
    tget, tcget, tnget, tncget, tput, tcput, tnput, tncput,
